<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Global init variables
global.gamerTimer = 0;
global.gameFrameCount = 10;
global.day = 0;
global.monthlyExpenses = 100;
global.gameStart = true;

//Delta time
global.deltaTime = 0;

//Governments
global.myGov = noone;

//Colors
global.whiteHSV = make_color_hsv(0,0,255);//make_colour_hsv(88,100,200);
global.defaultLandColor = make_colour_hsv(88,100,200);

//Gov colors
global.govColors[0] = make_colour_hsv(88,100,200);
global.govColors[1] = make_colour_hsv(130,100,200);

//Resource Colors
global.wheatColor = make_colour_hsv(40,240,255);
global.populationColor = make_colour_hsv(200,240,255);
global.ironColor = make_colour_hsv(160,240,255);
global.oilColor = make_colour_hsv(225,240,255);

//Modes
global.mode = "buyLand";

//Map modes
global.mapMode = "landMapMode";

//Resource map mode
global.resourceMapMode = "";

//Current map mode resource color
global.resourceColor = noone;

//Global resources
global.wheat = instance_find(obj_wheat,0);
global.beer = instance_find(obj_beer,0);
global.population = instance_find(obj_population,0);

//Global techs
global.wheatQuality = 1;
global.beerQuality = 1;
global.ironQuality = 1;
global.oilQuality = 1;
global.breadQuality = 1;
global.cannedFoodsQuality = 1;
global.machineToolsQuality = 1;
global.firearmsQuality = 1;
global.steelQuality = 1;
global.automobileQuality = 1;

//Played resources
global.playResources = ds_map_create();
ds_map_add(global.playResources,"wheat", global.wheatQuality);


global.playerOwnedWheatAmount = 0;
global.playerOwnedIronAmount = 0;
global.playerOwnedOilAmount = 0;

//Costs
global.buyLandCost = 100;

//Units
global.amountOfUnitsSelected = 0;

//The resource quality of each good
global.resourceQuality = ds_map_create();
ds_map_add(global.resourceQuality,"wheat", global.wheatQuality);
ds_map_add(global.resourceQuality,"beer", global.beerQuality);
ds_map_add(global.resourceQuality,"iron", global.ironQuality);
ds_map_add(global.resourceQuality,"oil", global.oilQuality);
ds_map_add(global.resourceQuality,"bread", global.breadQuality);
ds_map_add(global.resourceQuality,"cannedFoods", global.cannedFoodsQuality);
ds_map_add(global.resourceQuality,"machineTools", global.machineToolsQuality);
ds_map_add(global.resourceQuality,"firearms", global.firearmsQuality);
ds_map_add(global.resourceQuality,"steel", global.steelQuality);
ds_map_add(global.resourceQuality,"automobile", global.automobileQuality);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate each business profit
if(global.day % 30 == 0){
    for (var i = 0; i &lt; instance_number(obj_business); i += 1)
    {
        business[i] = instance_find(obj_business,i);
        
        if(!business[i].built) continue;
        
        if(business[i].cashSymbol == noone){
            //Made money
            if(business[i].monthlyStartingCash &lt; business[i].cash){
                symbol = instance_create(business[i].x,business[i].y - 64,obj_cashSymbol);
                symbol.spriteToDraw = spr_greenDollar; 
                symbol.business = business[i];
            }
            //Lost money
            else{
                symbol = instance_create(business[i].x,business[i].y - 64,obj_cashSymbol,);
                symbol.spriteToDraw = spr_redDollar; 
                symbol.business = business[i];
            }
            business[i].monthlyStartingCash = business[i].cash;
            business[i].cashSymbol = symbol;
            
            if(business[i].cash &gt; business[i].highestCash)
                business[i].highestCash = business[i].cash;
        }
    }
    
    with(obj_good){
        if(buildingsProducingResource &gt; buildingsNeedingResource){
            value -= 1;
        }
        if(buildingsProducingResource &lt; buildingsNeedingResource){
            value += 1;
        }
            
        value = clamp(value,startingValue * .22, startingValue * 5);
        value = clamp(value,1, startingValue * 5);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main loop

//Set up delta time
global.deltaTime = (30 / 1000000 * delta_time);

if(global.gameStart == true)    global.gamerTimer += (1 * global.deltaTime);
if(global.gamerTimer &gt; global.gameFrameCount){
    global.gamerTimer = 0;
    
    for (var i = 0; i &lt; instance_number(obj_business); i += 1)
    {
        business[i] = instance_find(obj_business,i);
        with(business[i]){
            //Start the business cycle
            event_perform(ev_other,ev_user0);
            supplierDoneOnce = false;
        }
    }

    global.day += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create player government
//global.playerGov = instance_create(608,608, obj_playerGov);

//Multiplayer send message
buffer_seek( global.client.Buffer , buffer_seek_start , 0 );
buffer_write( global.client.Buffer , buffer_string , "gMYGOV" );
    
result = network_send_packet( global.client.Socket , global.client.Buffer , buffer_tell( global.client.Buffer ) );

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(debug_mode){
    draw_set_font(fnt_debug);
    draw_text_colour(view_xport[0] + view_wport[0] - 200,view_yport[0] + 25,"FPS: " + string(fps_real),c_red,c_red,c_red,c_red,255);
    draw_text_colour(view_xport[0] + view_wport[0] - 200,view_yport[0] + 50,"Day: " + string(global.day),c_red,c_red,c_red,c_red,255);
    draw_text_colour(view_xport[0] + view_wport[0] - 200,view_yport[0] + 75,"InsBus: " + string(instance_number(obj_business)),c_red,c_red,c_red,c_red,255);
    
    if(global.myGov != noone)
        draw_text_colour(view_xport[0] + view_wport[0] - 200,view_yport[0] + 100,"Gov Cash: " + string(global.myGov.cash),c_red,c_red,c_red,c_red,255);
    
    //draw_text_colour(view_xport[0] + view_wport[0] - 200,view_yport[0] + 125,"Gov Cash: " + string(.cash),c_red,c_red,c_red,c_red,255);
    
    draw_text_colour(view_xport[0] + view_wport[0] - 200,view_yport[0] + 125,"Real FPS: "  + string(fps),c_red,c_red,c_red,c_red,255);
    
    draw_set_font(fnt_normal);
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
