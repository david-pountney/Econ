<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>topLeftX = x - sprite_get_width(spr_buildMenu) * .5;
topLeftY = y - sprite_get_height(spr_buildMenu) * .5;

color = c_white;

backgroundPanel = instance_create(topLeftX,topLeftY,obj_backgroundPanel);

cash = 0;
monthlyStartingCash = 0;
name = "";
pstType = "";

picture = noone;

productProduced = noone;
producePerDay = 0;
productStock = 0;

resourceRequired = noone;
resourceConsumedPerDay = 1;
resourceStock = 0;

supplier = noone;

supplying[0] = noone;
supplying[1] = noone;
supplying[2] = noone;

//selectResource = instance_create(x,y,obj_selectResource);
//selectBusiness = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Kill the build menu flasg which would otherwise cause it to re-open the menu
obj_control.buildMenuOpen = false;

//Kill all objects we have in our scope
//if(selectResource != noone)   with(selectResource) instance_destroy();
//if(selectBusiness != noone)   with(selectBusiness) instance_destroy();
with(backgroundPanel) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Position objects
x = (view_xview[0] + (view_wport[0] * .5));
y = (view_yview[0] + (view_hport[0] * .5));

topLeftX = x - sprite_get_width(spr_buildMenu) * .5;
topLeftY = y - sprite_get_height(spr_buildMenu) * .5;

backgroundPanel.x = topLeftX;
backgroundPanel.y = topLeftY;

//show_message(x);
//show_message(y);
//show_message(topLeftX);
//show_message(topLeftY);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up business variables
cash = obj_menuController.selectedBusiness.cash;
monthlyStartingCash = obj_menuController.selectedBusiness.monthlyStartingCash;
name = obj_menuController.selectedBusiness.name;
pstType = obj_menuController.selectedBusiness.pstType;

picture = obj_menuController.selectedBusiness.picture;

productProduced = obj_menuController.selectedBusiness.productProduced;
producePerDay = obj_menuController.selectedBusiness.producePerDay;
productStock = obj_menuController.selectedBusiness.productStock;

resourceRequired = obj_menuController.selectedBusiness.resourceRequired;
resourceConsumedPerDay = obj_menuController.selectedBusiness.resourceConsumedPerDay;
resourceStock = obj_menuController.selectedBusiness.resourceStock;

supplier = obj_menuController.selectedBusiness.supplier;

supplying[0] = obj_menuController.selectedBusiness.supplying[0];
supplying[1] = obj_menuController.selectedBusiness.supplying[1];
supplying[2] = obj_menuController.selectedBusiness.supplying[2];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startY = topLeftY + 300;
startX = topLeftX + 150;

gapY = 30;

if(picture != noone)
    draw_sprite_ext(picture,-1,startX,startY - (gapY*6),1,1,0,c_white,1);

var titleCol = c_blue;

draw_set_font(fnt_menu);
//Name
draw_text_colour(startX,startY - gapY,"Name: ",titleCol,titleCol,titleCol,titleCol,1);
draw_text_colour(startX + 120,startY - gapY,"Temp" + string(name),color,color,color,color,1);
//Cash
draw_text_colour(startX,startY,"Cash: ",titleCol,titleCol,titleCol,titleCol,1);
draw_text_colour(startX + 120,startY,"$" + string(cash),color,color,color,color,1);

//Product produced
if(productProduced != noone){
    draw_text_colour(startX,startY + gapY,"Selling: ",titleCol,titleCol,titleCol,titleCol,1);
    draw_text_colour(startX + 120,startY + gapY,string(productProduced.name),color,color,color,color,1);
}

//Product stock
draw_text_colour(startX,startY + (gapY*2),"Stock: ",titleCol,titleCol,titleCol,titleCol,1);
draw_text_colour(startX + 120,startY + (gapY*2),string(productStock),color,color,color,color,1);

if(pstType != "primary"){
    //Resource needed
    if(resourceRequired != noone){
        draw_text_colour(startX,startY + (gapY*4),"Resource: ",titleCol,titleCol,titleCol,titleCol,1);
        draw_text_colour(startX + 120,startY + (gapY*4),string(resourceRequired.name),color,color,color,color,1);
    }
}
if(pstType != "primary"){
    //Resource stock
    draw_text_colour(startX,startY + (gapY*5),"R. Stock: ",titleCol,titleCol,titleCol,titleCol,1);
    draw_text_colour(startX + 120,startY + (gapY*5),string(resourceStock),color,color,color,color,1);
}

if(pstType != "primary"){
    //Supplier
    draw_text_colour(startX,startY + (gapY*6),"Supplier: ",titleCol,titleCol,titleCol,titleCol,1);
    if(supplier != noone){
        draw_text_colour(startX + 120,startY + (gapY*6),string(supplier),color,color,color,color,1);
    } else{
        draw_text_colour(startX + 120,startY + (gapY*6),string(supplier),color,color,color,color,1);
    }
}

if(pstType != "tertiary"){
    //Supplying 1
    if(supplying[0] != noone){
        draw_text_colour(startX + 400,startY - (gapY),"Supplying: ",titleCol,titleCol,titleCol,titleCol,1);
        draw_text_colour(startX + 400,startY,string(supplying[0]),color,color,color,color,1);
    }
    //Supplying 2
    if(supplying[1] != noone){
        draw_text_colour(startX + 400,startY + (gapY),string(supplying[1]),titleCol,titleCol,titleCol,titleCol,1);
    }
    //Supplying 3
    if(supplying[2] != noone){
        draw_text_colour(startX + 400,startY + (gapY*2),string(supplying[2]),titleCol,titleCol,titleCol,titleCol,1);
    }
}
draw_set_font(fnt_normal);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
