<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>topLeftX = obj_militaryRecruitMenu.topLeftX;
topLeftY = obj_militaryRecruitMenu.topLeftY;

unitGood = instance_find(obj_riflemenSquad,0);

stockpileTextX = topLeftX + (sprite_get_width(spr_buildMenu) * .25);
stockpileTextY = topLeftY + (sprite_get_height(spr_buildMenu) * .1);

purchaseGoodsTextX = topLeftX + (sprite_get_width(spr_buildMenu) * .75);
purchaseGoodsTextY = topLeftY + (sprite_get_height(spr_buildMenu) * .1);

currentDay = global.day;

//nation stockpile
var count = 0;
for(i=ds_map_find_first(unitGood.unitMakeUp); count&lt;ds_map_size(unitGood.unitMakeUp); i=ds_map_find_next(unitGood.unitMakeUp,i)) {
    //The amount of the good needed
    i.amountOfGoodNeeded = ds_map_find_value(unitGood.unitMakeUp, i);
    
    //The amount of the good we have stockpilled nationally
    i.amountOfStockpiledGood = script_execute(scr_getAmountOfStockpiledGood, i, true);

    //The amount of the good that can be imported from other governments
    i.amountOfImportedGood = script_execute(scr_getAmountOfStockpiledGood, i, false);

    count++;
}

textToDraw = "Increase# Wheat Quality";
color = c_blue;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Position objects
x = obj_backgroundPanel.x;
y = obj_backgroundPanel.y;

topLeftX = x// - sprite_get_width(spr_buildMenu) * .5;
topLeftY = y// - sprite_get_height(spr_buildMenu) * .5;

stockpileTextX = topLeftX + (sprite_get_width(spr_buildMenu) * .25);
stockpileTextY = topLeftY + (sprite_get_height(spr_buildMenu) * .1);

purchaseGoodsTextX = topLeftX + (sprite_get_width(spr_buildMenu) * .75);
purchaseGoodsTextY = topLeftY + (sprite_get_height(spr_buildMenu) * .1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(scr_increaseProductQuality,obj_wheat);

//Kill the build menu
with(obj_techMenu) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_normal);
draw_set_halign(fa_center);

//Headers
draw_text_colour(stockpileTextX,stockpileTextY,"Government Stockpile",color,color,color,color,1);
draw_text_colour(purchaseGoodsTextX,purchaseGoodsTextY,"Purchase Goods",color,color,color,color,1);

//nation stockpile
var count = 0;
for(i=ds_map_find_first(unitGood.unitMakeUp); count&lt;ds_map_size(unitGood.unitMakeUp); i=ds_map_find_next(unitGood.unitMakeUp,i)) {
    //Calculate good amounts
    //if(global.day != currentDay){
        //The amount of the good needed
        i.amountOfGoodNeeded = ds_map_find_value(unitGood.unitMakeUp, i);
        
        //The amount of the good we have stockpilled nationally
        i.amountOfStockpiledGood = script_execute(scr_getAmountOfStockpiledGood, i, true);
    
        //The amount of the good that can be imported from other governments
        i.amountOfImportedGood = script_execute(scr_getAmountOfStockpiledGood, i, false);

        currentDay = global.day;
    //}
    count++;
}

var yOffset = 50;
var count = 0;
for(i=ds_map_find_first(unitGood.unitMakeUp); count&lt;ds_map_size(unitGood.unitMakeUp); i=ds_map_find_next(unitGood.unitMakeUp,i)) {
    //Draw display name of national stockpile good and amount
    draw_text_colour(stockpileTextX,stockpileTextY + yOffset,i.displayName +
    "     (" + string(i.amountOfStockpiledGood) + "/" + string(i.amountOfGoodNeeded)
        + ")" + "     $" + string(i.value * i.amountOfGoodNeeded)  ,color,color,color,color,1);
    
    //Draw display name of imported good and amount
    draw_text_colour(purchaseGoodsTextX,purchaseGoodsTextY + yOffset,i.displayName +
    "     (" + string(i.amountOfImportedGood) + "/" + string(i.amountOfGoodNeeded)
        + ")" + "     $" + string(i.value * i.amountOfGoodNeeded)  ,color,color,color,color,1);
    
    yOffset += 50;
    count++;
}

draw_set_halign(fa_left);
draw_set_font(fnt_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
